{
  "javascript": {
    "easy": [
      {
        "id": 1,
        "question": "Which symbol is used for comments in JavaScript?",
        "options": ["//", "/*", "#", "<!--"],
        "answer": "//"
      },
      {
        "id": 2,
        "question": "Which keyword is used to declare a variable in JavaScript?",
        "options": ["var", "int", "let", "both var and let"],
        "answer": "both var and let"
      },
      {
        "id": 3,
        "question": "Which company developed JavaScript?",
        "options": ["Mozilla", "Netscape", "Microsoft", "Google"],
        "answer": "Netscape"
      },
      {
        "id": 4,
        "question": "Inside which HTML element do we put the JavaScript?",
        "options": ["<js>", "<scripting>", "<script>", "<javascript>"],
        "answer": "<script>"
      },
      {
        "id": 5,
        "question": "What is the correct syntax to print something in the console?",
        "options": ["print('Hello')", "console.log('Hello')", "echo('Hello')", "log.console('Hello')"],
        "answer": "console.log('Hello')"
      },
      {
        "id": 6,
        "question": "What does DOM stand for?",
        "options": ["Document Object Model", "Display Object Model", "Document Oriented Method", "Data Object Model"],
        "answer": "Document Object Model"
      },
      {
        "id": 7,
        "question": "Which of the following is NOT a JavaScript data type?",
        "options": ["String", "Number", "Boolean", "Float"],
        "answer": "Float"
      },
      {
        "id": 8,
        "question": "Which of the following is used to define a function in JavaScript?",
        "options": ["function = myFunc()", "function:myFunc()", "function myFunc()", "define myFunc()"],
        "answer": "function myFunc()"
      },
      {
        "id": 9,
        "question": "How do you create an array in JavaScript?",
        "options": ["let arr = (1,2,3)", "let arr = [1,2,3]", "let arr = {1,2,3}", "let arr = <1,2,3>"],
        "answer": "let arr = [1,2,3]"
      },
      {
        "id": 10,
        "question": "Which operator is used to assign a value to a variable?",
        "options": ["-", "=", "==", "==="],
        "answer": "="
      },
      {
        "id": 11,
        "question": "Which function is used to convert a string to an integer in JavaScript?",
        "options": ["parseInt()", "toString()", "int()", "Number()"],
        "answer": "parseInt()"
      },
      {
        "id": 12,
        "question": "Which event occurs when the user clicks on an HTML element?",
        "options": ["onchange", "onmouseover", "onmouseclick", "onclick"],
        "answer": "onclick"
      },
      {
        "id": 13,
        "question": "How do you write a single-line comment in JavaScript?",
        "options": ["<!-- comment -->", "// comment", "** comment **", "# comment"],
        "answer": "// comment"
      },
      {
        "id": 14,
        "question": "Which of the following is used to stop a loop?",
        "options": ["exit", "stop", "halt", "break"],
        "answer": "break"
      },
      {
        "id": 15,
        "question": "What is the default value of an uninitialized variable?",
        "options": ["0", "undefined", "null", "NaN"],
        "answer": "undefined"
      },
      {
        "id": 16,
        "question": "Which method joins two or more arrays?",
        "options": ["append()", "merge()", "join()", "concat()"],
        "answer": "concat()"
      },
      {
        "id": 17,
        "question": "What keyword is used to define a constant in JavaScript?",
        "options": ["let", "var", "const", "define"],
        "answer": "const"
      },
      {
        "id": 18,
        "question": "Which method is used to remove the last element of an array?",
        "options": ["shift()", "pop()", "remove()", "splice()"],
        "answer": "pop()"
      },
      {
        "id": 19,
        "question": "How can you detect the type of a variable?",
        "options": ["typeof", "type()", "checkType()", "varType()"],
        "answer": "typeof"
      },
      {
        "id": 20,
        "question": "Which method adds a new element to the end of an array?",
        "options": ["push()", "append()", "insert()", "add()"],
        "answer": "push()"
      }
    ],
    "medium": [
      {
        "id": 101,
        "question": "What is the difference between '==' and '===' in JavaScript?",
        "options": [
          "'==' compares type and value, '===' only value",
          "'===' compares type and value, '==' only value",
          "They are exactly the same",
          "'==' is used for strings only"
        ],
        "answer": "'===' compares type and value, '==' only value"
      },
      {
        "id": 102,
        "question": "Which array method removes the last element from an array?",
        "options": ["pop()", "push()", "shift()", "unshift()"],
        "answer": "pop()"
      },
      {
        "id": 103,
        "question": "How can you check if a variable is an array in JavaScript?",
        "options": ["typeof variable", "Array.isArray(variable)", "isArray(variable)", "checkArray(variable)"],
        "answer": "Array.isArray(variable)"
      },
      {
        "id": 104,
        "question": "What is the purpose of the 'this' keyword in JavaScript?",
        "options": [
          "Refers to the current HTML element",
          "Refers to the global object only",
          "Refers to the object it belongs to",
          "Refers to the parent function only"
        ],
        "answer": "Refers to the object it belongs to"
      },
      {
        "id": 105,
        "question": "What will be the result of 'typeof NaN'?",
        "options": ["undefined", "number", "object", "NaN"],
        "answer": "number"
      },
      {
        "id": 106,
        "question": "Which built-in method returns the index of the first match of a value in a string?",
        "options": ["getIndex()", "indexOf()", "search()", "findIndex()"],
        "answer": "indexOf()"
      },
      {
        "id": 107,
        "question": "What is the output of: console.log([] + []);",
        "options": ["0", "undefined", "empty array", "empty string"],
        "answer": "empty string"
      },
      {
        "id": 108,
        "question": "What does the `bind()` method do in JavaScript?",
        "options": [
          "Binds an event to a function",
          "Creates a new function with the same body but a different 'this' value",
          "Changes the scope of a function permanently",
          "Links two variables together"
        ],
        "answer": "Creates a new function with the same body but a different 'this' value"
      },
      {
        "id": 109,
        "question": "Which method is used to convert a JSON string into a JavaScript object?",
        "options": ["JSON.stringify()", "JSON.parse()", "parse.JSON()", "stringify.JSON()"],
        "answer": "JSON.parse()"
      },
      {
        "id": 110,
        "question": "Which of the following is not a falsy value in JavaScript?",
        "options": ["0", "null", "undefined", "'false'"],
        "answer": "'false'"
      },
      {
        "id": 111,
        "question": "What will be the output of `typeof null`?",
        "options": ["object", "null", "undefined", "NaN"],
        "answer": "object"
      },
      {
        "id": 112,
        "question": "What does the `setTimeout` function return?",
        "options": ["nothing", "a timer ID", "a function", "milliseconds"],
        "answer": "a timer ID"
      },
      {
        "id": 113,
        "question": "What is a closure in JavaScript?",
        "options": [
          "A function inside another function",
          "A function that remembers variables from its outer scope",
          "A function with private variables",
          "A callback function"
        ],
        "answer": "A function that remembers variables from its outer scope"
      },
      {
        "id": 114,
        "question": "What is the scope of a variable declared with `let`?",
        "options": ["Global", "Function", "Block", "Module"],
        "answer": "Block"
      },
      {
        "id": 115,
        "question": "Which keyword is used to handle exceptions in JavaScript?",
        "options": ["catch", "try", "throw", "All of the above"],
        "answer": "All of the above"
      },
      {
        "id": 116,
        "question": "Which array method creates a new array with elements that pass a test?",
        "options": ["map()", "forEach()", "filter()", "reduce()"],
        "answer": "filter()"
      },
      {
        "id": 117,
        "question": "What will `typeof function myFunc(){}` return?",
        "options": ["function", "object", "undefined", "null"],
        "answer": "function"
      },
      {
        "id": 118,
        "question": "How do you define a class in JavaScript (ES6)?",
        "options": ["class MyClass {}", "def MyClass {}", "function MyClass() {}", "new Class()"],
        "answer": "class MyClass {}"
      },
      {
        "id": 119,
        "question": "Which keyword stops the execution of a function and returns a value?",
        "options": ["return", "break", "stop", "continue"],
        "answer": "return"
      },
      {
        "id": 120,
        "question": "What does the `Promise` object represent?",
        "options": [
          "An object for storing user data",
          "A value that may be available now, or in the future, or never",
          "A method to handle arrays",
          "A syntax for writing loops"
        ],
        "answer": "A value that may be available now, or in the future, or never"
      }
    ],
    "hard": [
      {
        "id": 201,
        "question": "Which feature allows functions to remember their lexical scope in JavaScript?",
        "options": ["Closure", "Callback", "Promise", "Hoisting"],
        "answer": "Closure"
      },
      {
        "id": 202,
        "question": "Which JavaScript method can be used to serialize an object to a JSON string?",
        "options": ["JSON.stringify()", "JSON.parse()", "toJSON()", "serialize()"],
        "answer": "JSON.stringify()"
      },
      {
        "id": 203,
        "question": "What is the main difference between call(), apply(), and bind()?",
        "options": [
          "They all do the same thing",
          "bind() returns a function, call() and apply() invoke immediately",
          "apply() is faster than call()",
          "call() changes context, bind() does not"
        ],
        "answer": "bind() returns a function, call() and apply() invoke immediately"
      },
      {
        "id": 204,
        "question": "What will `Promise.resolve(5).then(console.log)` output?",
        "options": ["undefined", "Promise { 5 }", "5", "Error"],
        "answer": "5"
      },
      {
        "id": 205,
        "question": "How does JavaScript handle asynchronous operations under the hood?",
        "options": [
          "Through blocking threads",
          "Using event loops and callback queues",
          "Using synchronous APIs",
          "By pausing the entire program"
        ],
        "answer": "Using event loops and callback queues"
      },
      {
        "id": 206,
        "question": "What will the following code log?\n```js\nlet a = [1,2,3];\nlet b = a;\nb.push(4);\nconsole.log(a);\n```",
        "options": [
          "[1, 2, 3]",
          "[1, 2, 3, 4]",
          "undefined",
          "Error"
        ],
        "answer": "[1, 2, 3, 4]"
      },
      {
        "id": 207,
        "question": "Which statement about JavaScript's event loop is true?",
        "options": [
          "The event loop executes all code synchronously",
          "The event loop is part of the call stack",
          "The event loop manages the call stack and task queue",
          "The event loop runs only in Node.js"
        ],
        "answer": "The event loop manages the call stack and task queue"
      },
      {
        "id": 208,
        "question": "What will this output?\n```js\nconsole.log(typeof typeof 1);\n```",
        "options": ["number", "string", "undefined", "object"],
        "answer": "string"
      },
      {
        "id": 209,
        "question": "What is the output of the following code?\n```js\n[...'SCRIPT']\n```",
        "options": [
          "['S', 'C', 'R', 'I', 'P', 'T']",
          "['SC', 'RI', 'PT']",
          "['SCRIPT']",
          "['S','C','R','I','P']"
        ],
        "answer": "['S', 'C', 'R', 'I', 'P', 'T']"
      },
      {
        "id": 210,
        "question": "What is the result of `Object.is(NaN, NaN)`?",
        "options": ["true", "false", "undefined", "NaN"],
        "answer": "true"
      },
      {
        "id": 211,
        "question": "How does `debounce` differ from `throttle` in JS performance techniques?",
        "options": [
          "Debounce limits call rate, throttle delays execution",
          "Throttle limits call rate, debounce executes after delay",
          "Both do the same thing",
          "Throttle only works with APIs"
        ],
        "answer": "Throttle limits call rate, debounce executes after delay"
      },
      {
        "id": 212,
        "question": "Which keyword can be used to prevent object mutation?",
        "options": ["Object.preventMutate()", "Object.freeze()", "lock()", "const"],
        "answer": "Object.freeze()"
      },
      {
        "id": 213,
        "question": "What is tail call optimization in JavaScript?",
        "options": [
          "Optimizing the last statement in a script",
          "Reusing the same function memory stack in recursion",
          "Avoiding closures in recursion",
          "Converting functions to arrow syntax"
        ],
        "answer": "Reusing the same function memory stack in recursion"
      },
      {
        "id": 214,
        "question": "Which function is used to schedule a microtask?",
        "options": ["setTimeout", "setImmediate", "queueMicrotask", "requestAnimationFrame"],
        "answer": "queueMicrotask"
      },
      {
        "id": 215,
        "question": "How are WeakMap keys different from Map keys?",
        "options": [
          "WeakMap keys must be strings",
          "WeakMap keys must be objects and are garbage collected",
          "Map keys are limited to numbers",
          "There is no difference"
        ],
        "answer": "WeakMap keys must be objects and are garbage collected"
      },
      {
        "id": 216,
        "question": "What will `Number([])` return?",
        "options": ["0", "NaN", "undefined", "[]"],
        "answer": "0"
      },
      {
        "id": 217,
        "question": "What does `new.target` refer to inside a constructor?",
        "options": [
          "The new instance",
          "The constructor function that was directly invoked with new",
          "The prototype",
          "The parent class"
        ],
        "answer": "The constructor function that was directly invoked with new"
      },
      {
        "id": 218,
        "question": "What’s the output of this?\n```js\nlet obj = { a: 1 };\nObject.defineProperty(obj, 'b', { value: 2, enumerable: false });\nconsole.log(Object.keys(obj));\n```",
        "options": [["a"], ["b"], ["a", "b"], ["2"]],
        "answer": ["a"]
      },
      {
        "id": 219,
        "question": "Why is `eval()` discouraged in modern JavaScript?",
        "options": [
          "It slows down the UI",
          "It cannot parse modern JS",
          "It opens security vulnerabilities",
          "It only works in strict mode"
        ],
        "answer": "It opens security vulnerabilities"
      },
      {
        "id": 220,
        "question": "Which of the following will not create a copy of an array?",
        "options": [
          "[...arr]",
          "arr.slice()",
          "Array.from(arr)",
          "arr.map()"
        ],
        "answer": "arr.map()"
      }
    ]
  },
  "python": {
    "easy": [
      {
        "id": 301,
        "question": "What is the keyword used to define a function in Python?",
        "options": ["def", "func", "function", "define"],
        "answer": "def"
      },
      {
        "id": 302,
        "question": "How do you print something in Python?",
        "options": ["echo()", "console.log()", "print()", "disp()"],
        "answer": "print()"
      },
      {
        "id": 303,
        "question": "What is the correct file extension for Python files?",
        "options": [".pt", ".python", ".py", ".pyt"],
        "answer": ".py"
      },
      {
        "id": 304,
        "question": "Which of the following is a valid variable name in Python?",
        "options": ["2value", "value_2", "value-2", "value 2"],
        "answer": "value_2"
      },
      {
        "id": 305,
        "question": "Which symbol is used for comments in Python?",
        "options": ["//", "#", "/* */", "<!-- -->"],
        "answer": "#"
      },
      {
        "id": 306,
        "question": "What will `type(5)` return in Python?",
        "options": ["float", "string", "int", "number"],
        "answer": "int"
      },
      {
        "id": 307,
        "question": "Which data type is used to store True or False?",
        "options": ["int", "bool", "str", "char"],
        "answer": "bool"
      },
      {
        "id": 308,
        "question": "Which operator is used for exponentiation (power) in Python?",
        "options": ["^", "**", "//", "%"],
        "answer": "**"
      },
      {
        "id": 309,
        "question": "How do you start a loop that repeats 5 times?",
        "options": ["for i in 5:", "repeat 5:", "for i in range(5):", "loop 5 times"],
        "answer": "for i in range(5):"
      },
      {
        "id": 310,
        "question": "Which keyword is used to create a loop in Python?",
        "options": ["repeat", "loop", "for", "foreach"],
        "answer": "for"
      },
      {
        "id": 311,
        "question": "Which function is used to get input from the user?",
        "options": ["read()", "input()", "scan()", "get()"],
        "answer": "input()"
      },
      {
        "id": 312,
        "question": "How do you convert a string to an integer in Python?",
        "options": ["int()", "str()", "float()", "number()"],
        "answer": "int()"
      },
      {
        "id": 313,
        "question": "Which of the following is a list in Python?",
        "options": ["{1,2,3}", "(1,2,3)", "[1,2,3]", "<1,2,3>"],
        "answer": "[1,2,3]"
      },
      {
        "id": 314,
        "question": "What will `len(\"Python\")` return?",
        "options": ["5", "6", "7", "Error"],
        "answer": "6"
      },
      {
        "id": 315,
        "question": "Which method adds an item to the end of a list?",
        "options": ["add()", "insert()", "append()", "extend()"],
        "answer": "append()"
      },
      {
        "id": 316,
        "question": "What is the output of `print(2 + 3 * 4)`?",
        "options": ["20", "14", "24", "18"],
        "answer": "14"
      },
      {
        "id": 317,
        "question": "How do you start a conditional block in Python?",
        "options": ["if x > 0 then", "if (x > 0)", "if x > 0:", "if x > 0 { }"],
        "answer": "if x > 0:"
      },
      {
        "id": 318,
        "question": "What keyword is used to end a function early and return a value?",
        "options": ["break", "stop", "exit", "return"],
        "answer": "return"
      },
      {
        "id": 319,
        "question": "Which of the following is a tuple?",
        "options": ["[1, 2, 3]", "(1, 2, 3)", "{1, 2, 3}", "<1, 2, 3>"],
        "answer": "(1, 2, 3)"
      },
      {
        "id": 320,
        "question": "What does the `len()` function do?",
        "options": ["Returns the length of an object", "Adds two numbers", "Deletes a variable", "Checks the type"],
        "answer": "Returns the length of an object"
      }
    ],
    "medium": [
      {
        "id": 401,
        "question": "Which of the following is a mutable data type in Python?",
        "options": ["list", "tuple", "str", "int"],
        "answer": "list"
      },
      {
        "id": 402,
        "question": "What does the 'len()' function do?",
        "options": ["Returns length of an object", "Counts digits", "Lists elements", "Returns last element"],
        "answer": "Returns length of an object"
      },
      {
        "id": 403,
        "question": "What is the output of: `print(type({}))`?",
        "options": ["list", "set", "dict", "tuple"],
        "answer": "dict"
      },
      {
        "id": 404,
        "question": "Which method is used to add an element at a specific index in a list?",
        "options": ["add()", "append()", "insert()", "extend()"],
        "answer": "insert()"
      },
      {
        "id": 405,
        "question": "Which statement is used to handle exceptions in Python?",
        "options": ["try-except", "catch-throw", "error-catch", "try-catch"],
        "answer": "try-except"
      },
      {
        "id": 406,
        "question": "How do you open a file for reading in Python?",
        "options": ["open('file.txt', 'r')", "read('file.txt')", "file('file.txt')", "open.read('file.txt')"],
        "answer": "open('file.txt', 'r')"
      },
      {
        "id": 407,
        "question": "Which of the following will create a set?",
        "options": ["{1, 2, 3}", "[1, 2, 3]", "(1, 2, 3)", "{\"1\": 1, \"2\": 2}"],
        "answer": "{1, 2, 3}"
      },
      {
        "id": 408,
        "question": "What is the output of: `bool([])`?",
        "options": ["True", "False", "None", "Error"],
        "answer": "False"
      },
      {
        "id": 409,
        "question": "Which keyword is used to define a class in Python?",
        "options": ["function", "object", "def", "class"],
        "answer": "class"
      },
      {
        "id": 410,
        "question": "Which function is used to get all keys from a dictionary?",
        "options": ["dict.keys()", "dict.getKeys()", "keys(dict)", "getKeys(dict)"],
        "answer": "dict.keys()"
      },
      {
        "id": 411,
        "question": "What does the `enumerate()` function do?",
        "options": ["Returns values only", "Returns index and value pairs", "Creates a list", "Counts list elements"],
        "answer": "Returns index and value pairs"
      },
      {
        "id": 412,
        "question": "Which operator is used for floor division in Python?",
        "options": ["/", "//", "%", "**"],
        "answer": "//"
      },
      {
        "id": 413,
        "question": "What is the output of `list(range(0, 10, 2))`?",
        "options": ["[0,2,4,6,8]", "[0,1,2,3,4]", "[2,4,6,8,10]", "[1,3,5,7,9]"],
        "answer": "[0,2,4,6,8]"
      },
      {
        "id": 414,
        "question": "Which method removes the last item from a list?",
        "options": ["pop()", "remove()", "delete()", "discard()"],
        "answer": "pop()"
      },
      {
        "id": 415,
        "question": "What will `set('hello')` return?",
        "options": ["{'hello'}", "{'h', 'e', 'l', 'o'}", "['h', 'e', 'l', 'l', 'o']", "('h', 'e', 'l', 'o')"],
        "answer": "{'h', 'e', 'l', 'o'}"
      },
      {
        "id": 416,
        "question": "Which function is used to sort a list in-place?",
        "options": ["sort()", "sorted()", "order()", "arrange()"],
        "answer": "sort()"
      },
      {
        "id": 417,
        "question": "What is a lambda function in Python?",
        "options": ["A named function", "A data type", "An anonymous function", "A loop"],
        "answer": "An anonymous function"
      },
      {
        "id": 418,
        "question": "What will be the result of: `[x**2 for x in range(3)]`?",
        "options": ["[1, 2, 3]", "[0, 1, 4]", "[0, 1, 2]", "[1, 4, 9]"],
        "answer": "[0, 1, 4]"
      },
      {
        "id": 419,
        "question": "Which module is used to work with regular expressions?",
        "options": ["regex", "re", "expression", "pyregex"],
        "answer": "re"
      },
      {
        "id": 420,
        "question": "What will `dict.get('key', 'default')` return if 'key' doesn't exist?",
        "options": ["Error", "None", "0", "'default'"],
        "answer": "'default'"
      }
    ],
    "hard": [
      {
        "id": 501,
        "question": "What is a Python generator?",
        "options": ["A function that returns an iterator", "A decorator", "A type of class", "A recursive function"],
        "answer": "A function that returns an iterator"
      },
      {
        "id": 502,
        "question": "What does the 'with' statement do in Python?",
        "options": ["Handles context management", "Imports modules", "Defines a block", "Creates functions"],
        "answer": "Handles context management"
      },
      {
        "id": 503,
        "question": "What is the purpose of the `__slots__` declaration in a class?",
        "options": ["To improve memory usage", "To define static variables", "To create methods", "To define class inheritance"],
        "answer": "To improve memory usage"
      },
      {
        "id": 504,
        "question": "Which of the following best defines a Python decorator?",
        "options": ["A design pattern", "A wrapper function", "A type of class", "A memory handler"],
        "answer": "A wrapper function"
      },
      {
        "id": 505,
        "question": "What does the `@staticmethod` decorator do?",
        "options": ["Defines a method that does not access the instance", "Creates a class variable", "Defines a constructor", "Inherits the method"],
        "answer": "Defines a method that does not access the instance"
      },
      {
        "id": 506,
        "question": "Which module is used for multi-threading in Python?",
        "options": ["threading", "multiprocessing", "concurrent", "os"],
        "answer": "threading"
      },
      {
        "id": 507,
        "question": "What does the Global Interpreter Lock (GIL) do in CPython?",
        "options": ["Prevents multiple threads from executing bytecodes simultaneously", "Locks files", "Manages garbage collection", "Allocates memory"],
        "answer": "Prevents multiple threads from executing bytecodes simultaneously"
      },
      {
        "id": 508,
        "question": "What is the difference between `is` and `==` in Python?",
        "options": ["`is` checks identity, `==` checks equality", "`is` checks equality, `==` checks identity", "They are the same", "`is` compares values only"],
        "answer": "`is` checks identity, `==` checks equality"
      },
      {
        "id": 509,
        "question": "Which magic method is used to make an object callable?",
        "options": ["__call__", "__init__", "__str__", "__getitem__"],
        "answer": "__call__"
      },
      {
        "id": 510,
        "question": "Which function is used to evaluate dynamically generated Python expressions from a string?",
        "options": ["eval()", "exec()", "compile()", "lambda"],
        "answer": "eval()"
      },
      {
        "id": 511,
        "question": "What is the output of `type(lambda x: x)`?",
        "options": ["function", "lambda", "<class 'function'>", "<lambda>"],
        "answer": "<class 'function'>"
      },
      {
        "id": 512,
        "question": "What is a metaclass in Python?",
        "options": ["A class of a class", "A subclass", "A decorator", "A memory class"],
        "answer": "A class of a class"
      },
      {
        "id": 513,
        "question": "Which of the following modules supports asynchronous I/O operations?",
        "options": ["asyncio", "threading", "multiprocessing", "subprocess"],
        "answer": "asyncio"
      },
      {
        "id": 514,
        "question": "What does `functools.lru_cache` do?",
        "options": ["Caches function results", "Runs function in reverse", "Limits recursion", "Logs errors"],
        "answer": "Caches function results"
      },
      {
        "id": 515,
        "question": "What will be the output of `''.join(reversed('abc'))`?",
        "options": ["abc", "cba", "['c', 'b', 'a']", "None"],
        "answer": "cba"
      },
      {
        "id": 516,
        "question": "How does Python handle memory management?",
        "options": ["Automatic using reference counting and garbage collection", "Manual allocation", "Uses malloc and free", "Only reference counting"],
        "answer": "Automatic using reference counting and garbage collection"
      },
      {
        "id": 517,
        "question": "What is the use of `yield` in Python?",
        "options": ["Returns a generator", "Stops function execution", "Ends the program", "Defines a coroutine"],
        "answer": "Returns a generator"
      },
      {
        "id": 518,
        "question": "Which of the following allows defining abstract base classes in Python?",
        "options": ["abc module", "abstract module", "inherit module", "base module"],
        "answer": "abc module"
      },
      {
        "id": 519,
        "question": "Which of these is true about the `__name__ == '__main__'` check?",
        "options": ["It checks if the script is being run directly", "It is used in imports", "It checks variable scope", "It creates a main function"],
        "answer": "It checks if the script is being run directly"
      },
      {
        "id": 520,
        "question": "What is the output of `list(map(lambda x: x*x, [1, 2, 3]))`?",
        "options": ["[1, 2, 3]", "[2, 4, 6]", "[1, 4, 9]", "[None, None, None]"],
        "answer": "[1, 4, 9]"
      }
    ]
  },
  "os": {
    "easy": [
      {
        "id": 601,
        "question": "What does OS stand for?",
        "options": ["Operating System", "Open Software", "Original Software", "Optical Storage"],
        "answer": "Operating System"
      },
      {
        "id": 602,
        "question": "Which of these is an example of an OS?",
        "options": ["Windows", "Google", "YouTube", "Intel"],
        "answer": "Windows"
      },
      {
        "id": 603,
        "question": "What is the primary purpose of an operating system?",
        "options": ["To manage hardware and software resources", "To browse the internet", "To create spreadsheets", "To play games"],
        "answer": "To manage hardware and software resources"
      },
      {
        "id": 604,
        "question": "Which of the following is NOT an operating system?",
        "options": ["Linux", "Windows", "Python", "macOS"],
        "answer": "Python"
      },
      {
        "id": 605,
        "question": "What type of operating system is Android?",
        "options": ["Mobile OS", "Desktop OS", "Server OS", "Real-time OS"],
        "answer": "Mobile OS"
      },
      {
        "id": 606,
        "question": "Which OS is developed by Apple?",
        "options": ["macOS", "Linux", "Windows", "Ubuntu"],
        "answer": "macOS"
      },
      {
        "id": 607,
        "question": "Which component of the OS manages the CPU, memory, and I/O devices?",
        "options": ["Kernel", "Shell", "Application", "Compiler"],
        "answer": "Kernel"
      },
      {
        "id": 608,
        "question": "Which of these is a command-line based OS?",
        "options": ["MS-DOS", "Windows 10", "macOS", "Android"],
        "answer": "MS-DOS"
      },
      {
        "id": 609,
        "question": "What is the full form of GUI?",
        "options": ["Graphical User Interface", "General User Instruction", "Global Utility Interface", "Graph Use Interface"],
        "answer": "Graphical User Interface"
      },
      {
        "id": 610,
        "question": "Which OS is open-source and based on Unix?",
        "options": ["Linux", "Windows", "macOS", "DOS"],
        "answer": "Linux"
      },
      {
        "id": 611,
        "question": "What is multitasking in OS?",
        "options": ["Running multiple tasks at the same time", "Sending multiple emails", "Copying a file", "Deleting a file"],
        "answer": "Running multiple tasks at the same time"
      },
      {
        "id": 612,
        "question": "What is the function of a file system in an OS?",
        "options": ["To organize and store data", "To run games", "To access internet", "To display videos"],
        "answer": "To organize and store data"
      },
      {
        "id": 613,
        "question": "Which of the following is a Linux distribution?",
        "options": ["Ubuntu", "Windows", "macOS", "iOS"],
        "answer": "Ubuntu"
      },
      {
        "id": 614,
        "question": "What does booting mean in the context of an OS?",
        "options": ["Starting the computer", "Shutting down the computer", "Running a program", "Updating software"],
        "answer": "Starting the computer"
      },
      {
        "id": 615,
        "question": "Which OS is most commonly used on personal computers?",
        "options": ["Windows", "Linux", "Android", "iOS"],
        "answer": "Windows"
      },
      {
        "id": 616,
        "question": "What is the shell in an operating system?",
        "options": ["Interface between user and kernel", "Part of RAM", "A type of virus", "A printer driver"],
        "answer": "Interface between user and kernel"
      },
      {
        "id": 617,
        "question": "Which OS is known for being user-friendly and widely used in offices?",
        "options": ["Windows", "Linux", "FreeBSD", "DOS"],
        "answer": "Windows"
      },
      {
        "id": 618,
        "question": "Which part of the OS loads first during booting?",
        "options": ["Kernel", "Shell", "File System", "Command prompt"],
        "answer": "Kernel"
      },
      {
        "id": 619,
        "question": "Which of the following allows interaction with the OS using text commands?",
        "options": ["Command Line Interface", "Touchscreen", "Mouse", "Joystick"],
        "answer": "Command Line Interface"
      },
      {
        "id": 620,
        "question": "Which device requires an operating system to function?",
        "options": ["Laptop", "Pen", "Chair", "Notebook"],
        "answer": "Laptop"
      }
    ],
    "medium": [
      {
        "id": 701,
        "question": "Which scheduling algorithm gives the minimum average waiting time?",
        "options": ["SJF", "FCFS", "Round Robin", "Priority"],
        "answer": "SJF"
      },
      {
        "id": 702,
        "question": "Which one is not a type of OS?",
        "options": ["Batch", "Real-Time", "Multiprogramming", "Flash OS"],
        "answer": "Flash OS"
      },
      {
        "id": 703,
        "question": "In which scheduling algorithm is starvation a major problem?",
        "options": ["SJF", "Round Robin", "FCFS", "LIFO"],
        "answer": "SJF"
      },
      {
        "id": 704,
        "question": "Which memory allocation strategy suffers from external fragmentation?",
        "options": ["Paging", "Segmentation", "Contiguous", "Swapping"],
        "answer": "Contiguous"
      },
      {
        "id": 705,
        "question": "Which data structure is used to implement a process scheduling queue?",
        "options": ["Queue", "Stack", "Linked List", "Tree"],
        "answer": "Queue"
      },
      {
        "id": 706,
        "question": "Thrashing occurs when:",
        "options": ["Too many processes are in the ready queue", "Processes are stuck in infinite loop", "Page fault rate is very high", "Deadlock occurs"],
        "answer": "Page fault rate is very high"
      },
      {
        "id": 707,
        "question": "What is a context switch?",
        "options": ["Switching from user mode to kernel mode", "Changing from one program to another", "Saving and restoring process state", "Switching off the system"],
        "answer": "Saving and restoring process state"
      },
      {
        "id": 708,
        "question": "Which of the following is not a state of a process?",
        "options": ["Running", "Blocked", "Executing", "Ready"],
        "answer": "Executing"
      },
      {
        "id": 709,
        "question": "Which of the following is responsible for managing virtual memory?",
        "options": ["Operating System", "Application", "Compiler", "User"],
        "answer": "Operating System"
      },
      {
        "id": 710,
        "question": "Which of the following is a non-preemptive scheduling algorithm?",
        "options": ["FCFS", "Round Robin", "SRTF", "Priority (preemptive)"],
        "answer": "FCFS"
      },
      {
        "id": 711,
        "question": "In demand paging, what causes a page fault?",
        "options": ["Page is found in main memory", "Page is not in memory", "Page is in TLB", "Page table is full"],
        "answer": "Page is not in memory"
      },
      {
        "id": 712,
        "question": "The banker’s algorithm is used for:",
        "options": ["Deadlock avoidance", "Memory management", "Scheduling", "File allocation"],
        "answer": "Deadlock avoidance"
      },
      {
        "id": 713,
        "question": "What is the main advantage of a multithreaded process?",
        "options": ["Faster I/O", "Efficient memory use", "Multiple tasks within same memory space", "Easier to program"],
        "answer": "Multiple tasks within same memory space"
      },
      {
        "id": 714,
        "question": "Which of these is used to keep track of free memory space?",
        "options": ["Bit map", "Page table", "File table", "TLB"],
        "answer": "Bit map"
      },
      {
        "id": 715,
        "question": "Which of these is NOT a valid page replacement algorithm?",
        "options": ["FIFO", "LRU", "OPT", "MAC"],
        "answer": "MAC"
      },
      {
        "id": 716,
        "question": "Which of the following causes internal fragmentation?",
        "options": ["Fixed partitioning", "Paging", "Segmentation", "Variable partitioning"],
        "answer": "Fixed partitioning"
      },
      {
        "id": 717,
        "question": "What is the purpose of a semaphore?",
        "options": ["Process synchronization", "Memory allocation", "I/O management", "File encryption"],
        "answer": "Process synchronization"
      },
      {
        "id": 718,
        "question": "Which technique allows the execution of a process without waiting for the previous one to complete?",
        "options": ["Pipelining", "Scheduling", "Swapping", "Threading"],
        "answer": "Threading"
      },
      {
        "id": 719,
        "question": "Which system call is used to create a new process in UNIX?",
        "options": ["fork()", "exec()", "create()", "start()"],
        "answer": "fork()"
      },
      {
        "id": 720,
        "question": "Which file system is commonly used in Linux?",
        "options": ["EXT4", "NTFS", "FAT32", "HFS"],
        "answer": "EXT4"
      }
    ],
    "hard": [
      {
        "id": 801,
        "question": "What is thrashing in Operating Systems?",
        "options": ["Excessive page swapping", "Disk formatting", "Process scheduling", "Deadlock handling"],
        "answer": "Excessive page swapping"
      },
      {
        "id": 802,
        "question": "What is the purpose of the inode in UNIX?",
        "options": ["Stores metadata about a file", "Starts the boot process", "Handles networking", "Allocates memory to processes"],
        "answer": "Stores metadata about a file"
      },
      {
        "id": 803,
        "question": "What does Belady's Anomaly refer to?",
        "options": ["More frames lead to more page faults", "More RAM improves performance", "Older pages are swapped first", "Less memory usage"],
        "answer": "More frames lead to more page faults"
      },
      {
        "id": 804,
        "question": "Which page replacement algorithm is optimal but impractical for implementation?",
        "options": ["FIFO", "LRU", "OPT", "Clock"],
        "answer": "OPT"
      },
      {
        "id": 805,
        "question": "What is the key concept behind copy-on-write in OS?",
        "options": ["Multiple processes share memory until a write occurs", "Only one process can access memory", "Memory is copied at runtime", "Prevents memory leaks"],
        "answer": "Multiple processes share memory until a write occurs"
      },
      {
        "id": 806,
        "question": "In deadlock detection, what does a cycle in the resource allocation graph indicate?",
        "options": ["A potential or actual deadlock", "High memory usage", "Process starvation", "Paging error"],
        "answer": "A potential or actual deadlock"
      },
      {
        "id": 807,
        "question": "Which of the following is a necessary condition for deadlock?",
        "options": ["Mutual exclusion", "Virtual memory", "Swapping", "Interrupts"],
        "answer": "Mutual exclusion"
      },
      {
        "id": 808,
        "question": "What technique is used in operating systems to load only required pages instead of the entire program?",
        "options": ["Demand Paging", "Pre-paging", "Segmentation", "Swapping"],
        "answer": "Demand Paging"
      },
      {
        "id": 809,
        "question": "What is the main disadvantage of using the FCFS page replacement algorithm?",
        "options": ["High page fault rate", "Complex implementation", "Hardware support required", "High memory usage"],
        "answer": "High page fault rate"
      },
      {
        "id": 810,
        "question": "In multilevel page tables, what is the primary benefit?",
        "options": ["Reduces memory used for page tables", "Improves CPU speed", "Avoids disk usage", "Allows faster I/O"],
        "answer": "Reduces memory used for page tables"
      },
      {
        "id": 811,
        "question": "Which condition is not necessary for a deadlock to occur?",
        "options": ["Preemption", "Mutual exclusion", "Circular wait", "Hold and wait"],
        "answer": "Preemption"
      },
      {
        "id": 812,
        "question": "In UNIX, what happens when a zombie process exists?",
        "options": ["Process has terminated but parent has not read exit status", "It continues running", "It is waiting for I/O", "It is in a deadlock"],
        "answer": "Process has terminated but parent has not read exit status"
      },
      {
        "id": 813,
        "question": "Which scheduling algorithm can lead to indefinite blocking?",
        "options": ["Priority Scheduling", "Round Robin", "SJF", "FCFS"],
        "answer": "Priority Scheduling"
      },
      {
        "id": 814,
        "question": "What is the role of the 'dispatcher' in OS scheduling?",
        "options": ["Switch context, jump to proper location, resume execution", "Execute I/O operations", "Detect deadlocks", "Load the kernel"],
        "answer": "Switch context, jump to proper location, resume execution"
      },
      {
        "id": 815,
        "question": "How is mutual exclusion achieved using semaphores?",
        "options": ["By using wait() and signal()", "By disabling interrupts", "Through caching", "By virtual memory"],
        "answer": "By using wait() and signal()"
      },
      {
        "id": 816,
        "question": "Which of the following file systems does not use journaling?",
        "options": ["FAT32", "EXT3", "NTFS", "EXT4"],
        "answer": "FAT32"
      },
      {
        "id": 817,
        "question": "What is the worst-case time complexity of LRU page replacement using a counter implementation?",
        "options": ["O(n)", "O(1)", "O(log n)", "O(n log n)"],
        "answer": "O(n)"
      },
      {
        "id": 818,
        "question": "Which technique is used to prevent race conditions in critical sections?",
        "options": ["Mutual exclusion", "Interrupt handling", "Paging", "Preemption"],
        "answer": "Mutual exclusion"
      },
      {
        "id": 819,
        "question": "In real-time systems, what is the key characteristic of hard real-time scheduling?",
        "options": ["Missing a deadline causes system failure", "Scheduling based on user priority", "Using FIFO always", "Deadline violations are allowed sometimes"],
        "answer": "Missing a deadline causes system failure"
      },
      {
        "id": 820,
        "question": "Which algorithm is used in disk scheduling to minimize seek time?",
        "options": ["LOOK", "FIFO", "Round Robin", "SJF"],
        "answer": "LOOK"
      }
    ]
  },
  "dbms": {
    "easy": [
      {
        "id": 901,
        "question": "What does SQL stand for?",
        "options": [
          "Structured Query Language",
          "Sequential Query Language",
          "Simple Query Language",
          "System Query Language"
        ],
        "answer": "Structured Query Language"
      },
      {
        "id": 902,
        "question": "Which command is used to retrieve data from a database?",
        "options": [
          "SELECT",
          "GET",
          "RETRIEVE",
          "SHOW"
        ],
        "answer": "SELECT"
      },
      {
        "id": 903,
        "question": "Which of the following is a type of database?",
        "options": [
          "Relational",
          "Procedural",
          "Functional",
          "Assembly"
        ],
        "answer": "Relational"
      },
      {
        "id": 904,
        "question": "Which SQL keyword is used to sort the result set?",
        "options": [
          "ORDER BY",
          "SORT",
          "GROUP BY",
          "RANK"
        ],
        "answer": "ORDER BY"
      },
      {
        "id": 905,
        "question": "Which command is used to insert data into a table?",
        "options": [
          "INSERT",
          "ADD",
          "UPDATE",
          "APPEND"
        ],
        "answer": "INSERT"
      },
      {
        "id": 906,
        "question": "What is a primary key?",
        "options": [
          "A unique identifier for a record",
          "A type of SQL command",
          "A temporary storage key",
          "A foreign database reference"
        ],
        "answer": "A unique identifier for a record"
      },
      {
        "id": 907,
        "question": "Which SQL clause is used to filter records?",
        "options": [
          "WHERE",
          "GROUP BY",
          "ORDER BY",
          "FILTER"
        ],
        "answer": "WHERE"
      },
      {
        "id": 908,
        "question": "Which SQL statement is used to remove records from a table?",
        "options": [
          "DELETE",
          "REMOVE",
          "DROP",
          "CUT"
        ],
        "answer": "DELETE"
      },
      {
        "id": 909,
        "question": "Which keyword is used to avoid duplicate records in SQL?",
        "options": [
          "DISTINCT",
          "UNIQUE",
          "NO DUPLICATE",
          "FILTERED"
        ],
        "answer": "DISTINCT"
      },
      {
        "id": 910,
        "question": "What does the 'NULL' value represent in a database?",
        "options": [
          "Missing or unknown data",
          "Zero",
          "Empty string",
          "False"
        ],
        "answer": "Missing or unknown data"
      },
      {
        "id": 911,
        "question": "Which command is used to create a new table?",
        "options": [
          "CREATE TABLE",
          "NEW TABLE",
          "MAKE TABLE",
          "INSERT TABLE"
        ],
        "answer": "CREATE TABLE"
      },
      {
        "id": 912,
        "question": "Which SQL statement is used to change data in a table?",
        "options": [
          "UPDATE",
          "MODIFY",
          "CHANGE",
          "REPLACE"
        ],
        "answer": "UPDATE"
      },
      {
        "id": 913,
        "question": "Which of the following is a valid SQL aggregate function?",
        "options": [
          "SUM",
          "COLLECT",
          "MERGE",
          "JOIN"
        ],
        "answer": "SUM"
      },
      {
        "id": 914,
        "question": "Which clause is used with GROUP BY to filter grouped records?",
        "options": [
          "HAVING",
          "WHERE",
          "ORDER",
          "LIMIT"
        ],
        "answer": "HAVING"
      },
      {
        "id": 915,
        "question": "What is the full form of DBMS?",
        "options": [
          "Database Management System",
          "Data Backup Management System",
          "Data Base Machine Software",
          "Digital Base Management Software"
        ],
        "answer": "Database Management System"
      },
      {
        "id": 916,
        "question": "Which key is used to link two tables?",
        "options": [
          "Foreign Key",
          "Primary Key",
          "Super Key",
          "Candidate Key"
        ],
        "answer": "Foreign Key"
      },
      {
        "id": 917,
        "question": "What does DDL stand for?",
        "options": [
          "Data Definition Language",
          "Data Development Language",
          "Database Driver Logic",
          "Data Derivation List"
        ],
        "answer": "Data Definition Language"
      },
      {
        "id": 918,
        "question": "Which normal form eliminates partial dependency?",
        "options": [
          "2NF",
          "1NF",
          "3NF",
          "BCNF"
        ],
        "answer": "2NF"
      },
      {
        "id": 919,
        "question": "What is the purpose of the COMMIT statement?",
        "options": [
          "To save changes permanently",
          "To remove data",
          "To rollback transaction",
          "To lock tables"
        ],
        "answer": "To save changes permanently"
      },
      {
        "id": 920,
        "question": "Which SQL clause limits the number of returned records?",
        "options": [
          "LIMIT",
          "TOP",
          "ROWNUM",
          "SIZE"
        ],
        "answer": "LIMIT"
      }
    ],
    "medium": [
      {
        "id": 1001,
        "question": "Which normal form removes transitive dependency?",
        "options": [
          "3NF",
          "2NF",
          "1NF",
          "BCNF"
        ],
        "answer": "3NF"
      },
      {
        "id": 1002,
        "question": "Which of the following is not a type of join?",
        "options": [
          "Outer",
          "Inner",
          "Left",
          "Side"
        ],
        "answer": "Side"
      },
      {
        "id": 1003,
        "question": "What is the purpose of an index in a database?",
        "options": [
          "To speed up data retrieval",
          "To enforce referential integrity",
          "To remove duplicate rows",
          "To encrypt data"
        ],
        "answer": "To speed up data retrieval"
      },
      {
        "id": 1004,
        "question": "Which SQL constraint ensures a column cannot have NULL values?",
        "options": [
          "NOT NULL",
          "UNIQUE",
          "CHECK",
          "DEFAULT"
        ],
        "answer": "NOT NULL"
      },
      {
        "id": 1005,
        "question": "Which join returns only matching rows from both tables?",
        "options": [
          "INNER JOIN",
          "LEFT JOIN",
          "RIGHT JOIN",
          "FULL JOIN"
        ],
        "answer": "INNER JOIN"
      },
      {
        "id": 1006,
        "question": "Which of the following ensures atomicity in a transaction?",
        "options": [
          "ROLLBACK",
          "TRUNCATE",
          "SELECT",
          "JOIN"
        ],
        "answer": "ROLLBACK"
      },
      {
        "id": 1007,
        "question": "What does the ACID property 'Isolation' ensure?",
        "options": [
          "Transactions do not interfere with each other",
          "Data is encrypted",
          "Data can be compressed",
          "Database is normalized"
        ],
        "answer": "Transactions do not interfere with each other"
      },
      {
        "id": 1008,
        "question": "What is a foreign key used for?",
        "options": [
          "To enforce a link between two tables",
          "To generate unique values",
          "To index columns",
          "To delete records"
        ],
        "answer": "To enforce a link between two tables"
      },
      {
        "id": 1009,
        "question": "Which command is used to remove all records but keep the structure?",
        "options": [
          "TRUNCATE",
          "DROP",
          "DELETE",
          "REMOVE"
        ],
        "answer": "TRUNCATE"
      },
      {
        "id": 1010,
        "question": "Which of the following is used to grant privileges in SQL?",
        "options": [
          "GRANT",
          "ALLOW",
          "PERMIT",
          "AUTHORIZE"
        ],
        "answer": "GRANT"
      },
      {
        "id": 1011,
        "question": "Which SQL statement undoes changes since the last COMMIT?",
        "options": [
          "ROLLBACK",
          "DELETE",
          "REVERT",
          "CANCEL"
        ],
        "answer": "ROLLBACK"
      },
      {
        "id": 1012,
        "question": "Which of these is not a DML (Data Manipulation Language) command?",
        "options": [
          "CREATE",
          "INSERT",
          "UPDATE",
          "DELETE"
        ],
        "answer": "CREATE"
      },
      {
        "id": 1013,
        "question": "What does the term 'cardinality' refer to in databases?",
        "options": [
          "Number of unique values in a column",
          "Number of tables in a schema",
          "Size of the database",
          "Type of a column"
        ],
        "answer": "Number of unique values in a column"
      },
      {
        "id": 1014,
        "question": "Which type of join includes all rows from the left table and matched rows from the right?",
        "options": [
          "LEFT JOIN",
          "INNER JOIN",
          "RIGHT JOIN",
          "FULL JOIN"
        ],
        "answer": "LEFT JOIN"
      },
      {
        "id": 1015,
        "question": "What is a candidate key?",
        "options": [
          "A field or set of fields that can uniquely identify a record",
          "A key used for encryption",
          "A field that stores timestamps",
          "A foreign key reference"
        ],
        "answer": "A field or set of fields that can uniquely identify a record"
      },
      {
        "id": 1016,
        "question": "Which clause is used to group rows with the same values?",
        "options": [
          "GROUP BY",
          "SORT BY",
          "ORDER BY",
          "COLLECT"
        ],
        "answer": "GROUP BY"
      },
      {
        "id": 1017,
        "question": "What is a view in SQL?",
        "options": [
          "A virtual table based on the result of a SELECT query",
          "A physical backup of a table",
          "A permission setting",
          "An index on a table"
        ],
        "answer": "A virtual table based on the result of a SELECT query"
      },
      {
        "id": 1018,
        "question": "Which operation combines the results of two SELECT statements and removes duplicates?",
        "options": [
          "UNION",
          "JOIN",
          "INTERSECT",
          "GROUP"
        ],
        "answer": "UNION"
      },
      {
        "id": 1019,
        "question": "Which normal form deals with multi-valued dependencies?",
        "options": [
          "4NF",
          "3NF",
          "2NF",
          "BCNF"
        ],
        "answer": "4NF"
      },
      {
        "id": 1020,
        "question": "Which command is used to modify the structure of a table?",
        "options": [
          "ALTER",
          "UPDATE",
          "RENAME",
          "MODIFY"
        ],
        "answer": "ALTER"
      }
    ],
    "hard": [
      {
        "id": 1101,
        "question": "What is a phantom read in database systems?",
        "options": [
          "A new row added that affects another transaction",
          "A deleted row reappearing",
          "A repeated read with same result",
          "An unreadable row"
        ],
        "answer": "A new row added that affects another transaction"
      },
      {
        "id": 1102,
        "question": "Which indexing method uses balanced tree structure?",
        "options": [
          "B+ Tree",
          "Hashing",
          "Heap",
          "Sequential"
        ],
        "answer": "B+ Tree"
      },
      {
        "id": 1103,
        "question": "Which isolation level avoids dirty reads but not non-repeatable reads?",
        "options": [
          "Read Committed",
          "Read Uncommitted",
          "Repeatable Read",
          "Serializable"
        ],
        "answer": "Read Committed"
      },
      {
        "id": 1104,
        "question": "Which of the following ensures conflict-serializability in a schedule?",
        "options": [
          "Precedence graph has no cycles",
          "All transactions use locks",
          "There are no deadlocks",
          "Each transaction commits independently"
        ],
        "answer": "Precedence graph has no cycles"
      },
      {
        "id": 1105,
        "question": "Which of the following is true about multiversion concurrency control (MVCC)?",
        "options": [
          "Readers don’t block writers and vice versa",
          "Only one transaction can write at a time",
          "Writers must wait for all readers to finish",
          "It uses pessimistic locking"
        ],
        "answer": "Readers don’t block writers and vice versa"
      },
      {
        "id": 1106,
        "question": "In which normal form are all non-trivial multivalued dependencies removed?",
        "options": [
          "4NF",
          "3NF",
          "BCNF",
          "2NF"
        ],
        "answer": "4NF"
      },
      {
        "id": 1107,
        "question": "Which of the following does NOT prevent lost update problems?",
        "options": [
          "Read Uncommitted",
          "Two-phase locking",
          "Serializable isolation",
          "Timestamp ordering"
        ],
        "answer": "Read Uncommitted"
      },
      {
        "id": 1108,
        "question": "What does the shadow paging technique ensure?",
        "options": [
          "Atomicity and durability",
          "Concurrency control",
          "Normalization",
          "Index management"
        ],
        "answer": "Atomicity and durability"
      },
      {
        "id": 1109,
        "question": "Which of the following is NOT a valid type of schedule in concurrency control?",
        "options": [
          "Recoverable",
          "Cascadeless",
          "Serializable",
          "Irrecoverable"
        ],
        "answer": "Irrecoverable"
      },
      {
        "id": 1110,
        "question": "Which file organization is most suitable for range queries?",
        "options": [
          "B+ Trees",
          "Hashing",
          "Unordered",
          "Linked lists"
        ],
        "answer": "B+ Trees"
      },
      {
        "id": 1111,
        "question": "Which of these is NOT a characteristic of NoSQL databases?",
        "options": [
          "Fixed schema",
          "Horizontal scalability",
          "Flexible data model",
          "Schema-less design"
        ],
        "answer": "Fixed schema"
      },
      {
        "id": 1112,
        "question": "In two-phase locking, when can a transaction release locks?",
        "options": [
          "Only during the shrinking phase",
          "Only during the growing phase",
          "At any time",
          "Only after the transaction ends"
        ],
        "answer": "Only during the shrinking phase"
      },
      {
        "id": 1113,
        "question": "Which schedule always ensures serializability?",
        "options": [
          "Serializable",
          "View serializable",
          "Strict 2PL",
          "Recoverable"
        ],
        "answer": "Strict 2PL"
      },
      {
        "id": 1114,
        "question": "What is the purpose of the undo log in recovery?",
        "options": [
          "To restore the database to a consistent state after failure",
          "To redo committed transactions",
          "To backup the database",
          "To delete unnecessary data"
        ],
        "answer": "To restore the database to a consistent state after failure"
      },
      {
        "id": 1115,
        "question": "Which SQL operation may lead to a deadlock in concurrent transactions?",
        "options": [
          "UPDATE with row-level locking",
          "SELECT on indexed table",
          "DELETE on a temporary table",
          "READ UNCOMMITTED SELECT"
        ],
        "answer": "UPDATE with row-level locking"
      },
      {
        "id": 1116,
        "question": "Which one is not a component of the ARIES recovery algorithm?",
        "options": [
          "Analysis",
          "Redo",
          "Compression",
          "Undo"
        ],
        "answer": "Compression"
      },
      {
        "id": 1117,
        "question": "Which of the following is true about foreign key constraints?",
        "options": [
          "They can enforce referential integrity across tables",
          "They allow duplicate values in primary columns",
          "They cannot be used with composite keys",
          "They are ignored by transaction logs"
        ],
        "answer": "They can enforce referential integrity across tables"
      },
      {
        "id": 1118,
        "question": "Which command ensures that changes made by a transaction are permanent?",
        "options": [
          "COMMIT",
          "ROLLBACK",
          "SAVEPOINT",
          "GRANT"
        ],
        "answer": "COMMIT"
      },
      {
        "id": 1119,
        "question": "Which of the following techniques avoids cascading rollbacks?",
        "options": [
          "Cascadeless schedules",
          "Strict schedules",
          "View-serializable schedules",
          "Recoverable schedules"
        ],
        "answer": "Cascadeless schedules"
      },
      {
        "id": 1120,
        "question": "Which concurrency control protocol ensures serializability without deadlock?",
        "options": [
          "Timestamp ordering",
          "Two-phase locking",
          "Wait-die",
          "Wound-wait"
        ],
        "answer": "Timestamp ordering"
      }
    ]

  },
  "dsa": {
    "easy": [
      {
        "id": 1201,
        "question": "Which data structure uses FIFO?",
        "options": [
          "Queue",
          "Stack",
          "Tree",
          "Graph"
        ],
        "answer": "Queue"
      },
      {
        "id": 1202,
        "question": "What is the time complexity of binary search?",
        "options": [
          "O(log n)",
          "O(n)",
          "O(n log n)",
          "O(1)"
        ],
        "answer": "O(log n)"
      },
      {
        "id": 1203,
        "question": "Which data structure uses LIFO?",
        "options": [
          "Stack",
          "Queue",
          "Linked List",
          "Tree"
        ],
        "answer": "Stack"
      },
      {
        "id": 1204,
        "question": "Which traversal is used in Binary Search Tree to get ascending order elements?",
        "options": [
          "Inorder",
          "Preorder",
          "Postorder",
          "Level order"
        ],
        "answer": "Inorder"
      },
      {
        "id": 1205,
        "question": "What is the time complexity of inserting an element at the end of an array (assuming capacity)?",
        "options": [
          "O(1)",
          "O(n)",
          "O(log n)",
          "O(n^2)"
        ],
        "answer": "O(1)"
      },
      {
        "id": 1206,
        "question": "Which data structure is typically used to implement recursion?",
        "options": [
          "Stack",
          "Queue",
          "Array",
          "Graph"
        ],
        "answer": "Stack"
      },
      {
        "id": 1207,
        "question": "Which data structure is used for BFS traversal of a graph?",
        "options": [
          "Queue",
          "Stack",
          "Array",
          "Linked List"
        ],
        "answer": "Queue"
      },
      {
        "id": 1208,
        "question": "Which operation has O(1) complexity in a hash table (on average)?",
        "options": [
          "Search",
          "Traversal",
          "Sorting",
          "Recursion"
        ],
        "answer": "Search"
      },
      {
        "id": 1209,
        "question": "Which of the following is a linear data structure?",
        "options": [
          "Array",
          "Graph",
          "Tree",
          "Heap"
        ],
        "answer": "Array"
      },
      {
        "id": 1210,
        "question": "Which sorting algorithm is the simplest but inefficient for large datasets?",
        "options": [
          "Bubble Sort",
          "Merge Sort",
          "Quick Sort",
          "Heap Sort"
        ],
        "answer": "Bubble Sort"
      },
      {
        "id": 1211,
        "question": "What is the worst-case time complexity of linear search?",
        "options": [
          "O(n)",
          "O(1)",
          "O(log n)",
          "O(n log n)"
        ],
        "answer": "O(n)"
      },
      {
        "id": 1212,
        "question": "What is the maximum number of children a binary tree node can have?",
        "options": [
          "2",
          "1",
          "3",
          "4"
        ],
        "answer": "2"
      },
      {
        "id": 1213,
        "question": "Which of the following is not a type of linked list?",
        "options": [
          "Circular",
          "Doubly",
          "Ternary",
          "Singly"
        ],
        "answer": "Ternary"
      },
      {
        "id": 1214,
        "question": "In a max heap, where is the largest element located?",
        "options": [
          "At the root",
          "At the leftmost leaf",
          "At the rightmost leaf",
          "In the middle"
        ],
        "answer": "At the root"
      },
      {
        "id": 1215,
        "question": "Which algorithm is used for finding the shortest path in a graph with non-negative weights?",
        "options": [
          "Dijkstra's algorithm",
          "Kruskal's algorithm",
          "DFS",
          "Prim's algorithm"
        ],
        "answer": "Dijkstra's algorithm"
      },
      {
        "id": 1216,
        "question": "Which data structure is used in function call management in programming languages?",
        "options": [
          "Stack",
          "Queue",
          "Heap",
          "Tree"
        ],
        "answer": "Stack"
      },
      {
        "id": 1217,
        "question": "Which sorting algorithm divides the array into two halves recursively?",
        "options": [
          "Merge Sort",
          "Insertion Sort",
          "Bubble Sort",
          "Selection Sort"
        ],
        "answer": "Merge Sort"
      },
      {
        "id": 1218,
        "question": "Which of the following is a divide and conquer algorithm?",
        "options": [
          "Quick Sort",
          "Bubble Sort",
          "Insertion Sort",
          "Counting Sort"
        ],
        "answer": "Quick Sort"
      },
      {
        "id": 1219,
        "question": "Which of the following is true about a circular queue?",
        "options": [
          "Rear can wrap around to the front",
          "It only inserts at the end",
          "It overflows when it reaches capacity",
          "It only stores even numbers"
        ],
        "answer": "Rear can wrap around to the front"
      },
      {
        "id": 1220,
        "question": "Which of these data structures can be used to implement a priority queue?",
        "options": [
          "Heap",
          "Stack",
          "Graph",
          "Set"
        ],
        "answer": "Heap"
      }
    ],
    "medium": [
      {
        "id": 1301,
        "question": "Which algorithm is used to find the shortest path in a graph?",
        "options": [
          "Dijkstra",
          "Prim",
          "Kruskal",
          "Bellman"
        ],
        "answer": "Dijkstra"
      },
      {
        "id": 1302,
        "question": "What is the height of a complete binary tree with n nodes?",
        "options": [
          "log₂n",
          "n",
          "n/2",
          "2n"
        ],
        "answer": "log₂n"
      },
      {
        "id": 1303,
        "question": "What is the best data structure to check for balanced parentheses?",
        "options": [
          "Stack",
          "Queue",
          "Tree",
          "Graph"
        ],
        "answer": "Stack"
      },
      {
        "id": 1304,
        "question": "Which traversal method is used for DFS in a binary tree?",
        "options": [
          "Inorder, Preorder, Postorder",
          "Level order",
          "BFS only",
          "None of the above"
        ],
        "answer": "Inorder, Preorder, Postorder"
      },
      {
        "id": 1305,
        "question": "What is the time complexity of searching in a balanced binary search tree?",
        "options": [
          "O(log n)",
          "O(n)",
          "O(n log n)",
          "O(1)"
        ],
        "answer": "O(log n)"
      },
      {
        "id": 1306,
        "question": "Which data structure is best for implementing LRU cache?",
        "options": [
          "HashMap + Doubly Linked List",
          "Stack",
          "Binary Tree",
          "Priority Queue"
        ],
        "answer": "HashMap + Doubly Linked List"
      },
      {
        "id": 1307,
        "question": "Which sorting algorithm has the best average case performance?",
        "options": [
          "Merge Sort",
          "Bubble Sort",
          "Selection Sort",
          "Insertion Sort"
        ],
        "answer": "Merge Sort"
      },
      {
        "id": 1308,
        "question": "What is the maximum number of nodes in a binary tree of height h?",
        "options": [
          "2^h - 1",
          "2h",
          "h^2",
          "2h - 1"
        ],
        "answer": "2^h - 1"
      },
      {
        "id": 1309,
        "question": "Which data structure helps with efficient prefix-based searching?",
        "options": [
          "Trie",
          "Stack",
          "Queue",
          "HashMap"
        ],
        "answer": "Trie"
      },
      {
        "id": 1310,
        "question": "Which technique is used in backtracking algorithms?",
        "options": [
          "Recursion",
          "Queue",
          "Iteration",
          "Memoization"
        ],
        "answer": "Recursion"
      },
      {
        "id": 1311,
        "question": "Which algorithm can be used to detect a cycle in a directed graph?",
        "options": [
          "DFS with visited and recursion stack",
          "BFS",
          "Kruskal's algorithm",
          "Prim's algorithm"
        ],
        "answer": "DFS with visited and recursion stack"
      },
      {
        "id": 1312,
        "question": "What is the time complexity of heapify operation in a binary heap?",
        "options": [
          "O(log n)",
          "O(n)",
          "O(n log n)",
          "O(1)"
        ],
        "answer": "O(log n)"
      },
      {
        "id": 1313,
        "question": "What does the two-pointer technique help optimize?",
        "options": [
          "Space and time in sorted array problems",
          "Sorting",
          "Recursion",
          "Tree traversals"
        ],
        "answer": "Space and time in sorted array problems"
      },
      {
        "id": 1314,
        "question": "What is the main advantage of merge sort over quicksort?",
        "options": [
          "Stable sort",
          "Faster average time",
          "Less space usage",
          "In-place sorting"
        ],
        "answer": "Stable sort"
      },
      {
        "id": 1315,
        "question": "Which graph algorithm is used for topological sorting?",
        "options": [
          "DFS",
          "BFS",
          "Prim",
          "Bellman-Ford"
        ],
        "answer": "DFS"
      },
      {
        "id": 1316,
        "question": "Which tree structure allows efficient range queries and updates?",
        "options": [
          "Segment Tree",
          "Binary Tree",
          "Trie",
          "B-Tree"
        ],
        "answer": "Segment Tree"
      },
      {
        "id": 1317,
        "question": "Which method is used to convert a postfix expression to infix?",
        "options": [
          "Using stack",
          "Using queue",
          "Using tree traversal",
          "Using recursion only"
        ],
        "answer": "Using stack"
      },
      {
        "id": 1318,
        "question": "Which condition is used in binary search termination?",
        "options": [
          "low > high",
          "low = high",
          "mid == high",
          "high = 0"
        ],
        "answer": "low > high"
      },
      {
        "id": 1319,
        "question": "Which of the following is used in KMP pattern matching algorithm?",
        "options": [
          "Prefix table (LPS array)",
          "Suffix tree",
          "Hashing",
          "Trie"
        ],
        "answer": "Prefix table (LPS array)"
      },
      {
        "id": 1320,
        "question": "What is the auxiliary space complexity of merge sort?",
        "options": [
          "O(n)",
          "O(1)",
          "O(log n)",
          "O(n log n)"
        ],
        "answer": "O(n)"
      }
    ],
    "hard": [
      {
        "id": 1401,
        "question": "Which traversal gives a sorted order in BST?",
        "options": [
          "In-order",
          "Pre-order",
          "Post-order",
          "Level-order"
        ],
        "answer": "In-order"
      },
      {
        "id": 1402,
        "question": "Which algorithm is used for cycle detection in directed graph?",
        "options": [
          "DFS with recursion stack",
          "BFS",
          "Prim",
          "Kruskal"
        ],
        "answer": "DFS with recursion stack"
      },
      {
        "id": 1403,
        "question": "What is the time complexity of building a heap from an array?",
        "options": [
          "O(n)",
          "O(n log n)",
          "O(log n)",
          "O(1)"
        ],
        "answer": "O(n)"
      },
      {
        "id": 1404,
        "question": "Which algorithm is used to find strongly connected components in a graph?",
        "options": [
          "Kosaraju’s Algorithm",
          "Dijkstra’s Algorithm",
          "Kruskal’s Algorithm",
          "Floyd-Warshall Algorithm"
        ],
        "answer": "Kosaraju’s Algorithm"
      },
      {
        "id": 1405,
        "question": "What is the time complexity of the Bellman-Ford algorithm?",
        "options": [
          "O(VE)",
          "O(V+E)",
          "O(E log V)",
          "O(V^2)"
        ],
        "answer": "O(VE)"
      },
      {
        "id": 1406,
        "question": "Which data structure supports efficient Min/Max in O(1) with insert/delete in O(1)?",
        "options": [
          "Stack with auxiliary stack",
          "Queue",
          "Heap",
          "HashMap"
        ],
        "answer": "Stack with auxiliary stack"
      },
      {
        "id": 1407,
        "question": "What is the minimum number of comparisons required to find the second largest element in an array?",
        "options": [
          "n + log n - 2",
          "n - 1",
          "2n",
          "n log n"
        ],
        "answer": "n + log n - 2"
      },
      {
        "id": 1408,
        "question": "Which algorithm is best suited for solving the All-Pairs Shortest Path problem?",
        "options": [
          "Floyd-Warshall",
          "Prim",
          "Kruskal",
          "DFS"
        ],
        "answer": "Floyd-Warshall"
      },
      {
        "id": 1409,
        "question": "Which data structure is used in Tarjan's algorithm for articulation points?",
        "options": [
          "DFS with timestamps and low values",
          "Union-Find",
          "BFS queue",
          "Segment Tree"
        ],
        "answer": "DFS with timestamps and low values"
      },
      {
        "id": 1410,
        "question": "Which algorithm is used for finding bridges in a graph?",
        "options": [
          "Tarjan's algorithm",
          "Prim's algorithm",
          "Kruskal's algorithm",
          "Dijkstra's algorithm"
        ],
        "answer": "Tarjan's algorithm"
      },
      {
        "id": 1411,
        "question": "What is the time complexity of a segment tree for range query and update?",
        "options": [
          "O(log n)",
          "O(n)",
          "O(n log n)",
          "O(1)"
        ],
        "answer": "O(log n)"
      },
      {
        "id": 1412,
        "question": "In a red-black tree, what is the maximum height difference between left and right subtrees?",
        "options": [
          "2x log n",
          "n",
          "1",
          "Unbounded"
        ],
        "answer": "2x log n"
      },
      {
        "id": 1413,
        "question": "Which technique is used in Manacher’s Algorithm?",
        "options": [
          "Center Expansion with Mirroring",
          "Sliding Window",
          "Prefix Hashing",
          "Divide and Conquer"
        ],
        "answer": "Center Expansion with Mirroring"
      },
      {
        "id": 1414,
        "question": "What is the time complexity of the Union-Find with path compression and union by rank?",
        "options": [
          "O(α(n))",
          "O(n)",
          "O(log n)",
          "O(n log n)"
        ],
        "answer": "O(α(n))"
      },
      {
        "id": 1415,
        "question": "What is the number of unique Binary Search Trees (BSTs) that can be formed with n keys?",
        "options": [
          "Catalan Number: C(n)",
          "n!",
          "2^n",
          "n^2"
        ],
        "answer": "Catalan Number: C(n)"
      },
      {
        "id": 1416,
        "question": "Which algorithm is used for string matching in linear time?",
        "options": [
          "Knuth-Morris-Pratt (KMP)",
          "Naive algorithm",
          "Backtracking",
          "Z-Algorithm"
        ],
        "answer": "Knuth-Morris-Pratt (KMP)"
      },
      {
        "id": 1417,
        "question": "Which graph algorithm works even with negative edge weights but no negative cycles?",
        "options": [
          "Bellman-Ford",
          "Dijkstra",
          "Kruskal",
          "Prim"
        ],
        "answer": "Bellman-Ford"
      },
      {
        "id": 1418,
        "question": "Which technique is used to solve problems like Matrix Chain Multiplication?",
        "options": [
          "Dynamic Programming with memoization",
          "Greedy algorithm",
          "Two pointers",
          "Backtracking"
        ],
        "answer": "Dynamic Programming with memoization"
      },
      {
        "id": 1419,
        "question": "Which algorithm is used in finding minimum spanning tree in dense graphs efficiently?",
        "options": [
          "Prim’s algorithm using Min-Heap",
          "Kruskal’s algorithm",
          "DFS",
          "Bellman-Ford"
        ],
        "answer": "Prim’s algorithm using Min-Heap"
      },
      {
        "id": 1420,
        "question": "Which algorithm helps detect articulation points and bridges in a graph?",
        "options": [
          "Tarjan’s Algorithm",
          "Dijkstra’s Algorithm",
          "KMP Algorithm",
          "Kruskal’s Algorithm"
        ],
        "answer": "Tarjan’s Algorithm"
      }
    ]
  }
}